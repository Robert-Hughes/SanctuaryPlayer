body {
    height: 100%;
    margin: 0px;
    font-size: xx-large;
    overflow: hidden;  /* Prevent scroll bars from appearing when doing hack in onOverlayClick */
    touch-action: none; /* Prevent double-clicking to zoom on mobile, as often this happens while using the normal UI. */
    font-family: sans-serif;
}
select {
    font-size: xx-large;
}

#root {
    height: 100%;
    display: flex;
    flex-direction: column;
    user-select: none; /* Otherwise for example clicking a lot can make the whole page blue */
}

#welcome-screen {
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    position: absolute;
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    text-align: center;
    background:white;
}
#welcome-screen .title {
    font-size: 10vmin;
    margin: 0.5em;
    color: #6C63FF;
}
#welcome-screen .subtitle {
    font-size: 5vmin;
    margin: 0.5em;
    color: #B5179E;
}
#loading-status-container {
    /* As well as being displayed when no video is loaded yet, this needs to display properly on top of the blockers when
       there is an error loading a video. So it needs absolute position etc. so it's on top */
    display: none; /* Will be shown when a video starts loading */
    align-items: center;
    justify-content: center;

    position: absolute;
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    text-align: center;
}
#loading-status {
    background:white;
    border-radius: 10px;
    padding: 10px;
    font-size: 10vmin;
}

#player {
    height: 100%;
    width: 100%;
}

#player-overlay {
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
    position: absolute;
}

.blocker {
    width: 100%;
    background: black;
    position: absolute;
    color: white;
    pointer-events: none;
    display: none;
}
#blocker-top {
    top: 0px;
    /* height: This is dependent on YouTube vs. Twitch, so is set in code */
}
#blocker-bottom {
    /* height: This is dependent on YouTube vs. Twitch, so is set in code */
    bottom: 0px;
}
#blocker-full {
    height: 100%;
    bottom: 0px;
}

#player-overlay-controls {
    position: absolute; /* So that the controls are on top of the blockers */
    display: flex; /* Initially displayed so that user can see the Change Video button */
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    justify-content: space-between;
}

#player-overlay-controls-top {
    margin-left: auto; /* Align to the right */
}

#menu-button {
    width: 9vmin;
    height: 9vmin;
    padding: 1.5vmin;
    border-radius: 8px;
}
#menu-button:hover
{
    background-color: hsl(243, 100%, 90%);
}
#menu-button.open
{
    background-color: hsl(243, 100%, 90%);
}

.menu-icon {
    background:
        content-box url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="-0.5 -0.5 6 6" fill="hsl(243, 100%, 70%)"><path d="M 0 0 l 5 0 a 0.5 0.5 0 0 1 0 1 l -5 0 a 0.5 0.5 0 0 1 0 -1 M 0 2 l 5 0 a 0.5 0.5 0 0 1 0 1 l -5 0 a 0.5 0.5 0 0 1 0 -1 M 0 4 l 5 0 a 0.5 0.5 0 0 1 0 1 l -5 0 a 0.5 0.5 0 0 1 0 -1" /></svg>'),
        border-box white;
    background-size: cover;
}


#menu {
    display: none;
    background: linear-gradient(135deg, hsl(243, 100%, 98%), hsl(309, 77%, 98%));
    position: absolute;
    right: 0px;
    /* Some annoying CSS to deal with the case when the menu is too tall to fit on the page, so that it can be scrolled */
    /* This is complicated because we want the top of the menu to be just below the Menu button */
    overflow-y: auto;
    max-height: calc(100% - 1.5em); /* In case the menu is taller than the viewport, make it scroll. Subtract 1.5em for height of the Menu button */
    border-radius: 8px;
    border: 2px solid black;
}

#menu div {
    margin: 0.2em;
    padding: 0.25rem 0.5rem;
    border-radius: 8px;
}
.clickable-menu-item:hover
{
    background-color: hsl(243, 100%, 90%);
}

#saved-positions-header {
    display: none; /* Initially hidden, until we fetch from server */
}
#saved-positions-table {
    margin-left: 2em;
}
#saved-positions-table td.is-current-video {
    background-color: lightblue;
}
#saved-positions-table td.is-current-device {
    background-color: lightblue;
}
#saved-positions-table tbody tr:hover {
    background-color: hsl(243, 100%, 90%);
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.spinner {
    display: inline-block;
    width: 1em;
    height: 1em;
    border-top: 1px black solid;
    border-radius: 50%;
    vertical-align: text-bottom;
    animation-name: spin;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}

#saved-positions-this-video,#saved-positions-other-videos {
    padding-left: 30px;
}

#use-native-player-controls-button {
    display: none; /* Hidden until a video is loaded */
}

#player-overlay-controls-mid {
    display: none; /* Initially hidden until a video is loaded */
    column-gap: 0.2em;
    max-width: 100%; /* For when the window is really narrow */
     /* For when the window is really short */
    max-height: 50%;
    overflow: hidden;
}
#player-overlay-controls-mid div:hover {
    background-color: hsl(243, 100%, 90%);
}
#play-pause-button {
    background-size: cover;
    width: 5em;
    height: 5em;
    border-radius: 8px;
}
.icon-play {
    background:
        url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="hsl(243, 100%, 70%)"><polygon points="4,4 4,20 20,12 "/></svg>'),
        white;
}
.icon-pause {
    background:
        url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="hsl(243, 100%, 70%)">    <g>       <rect x="6" y="5" width="5" height="14" />       <rect x="13" y="5" width="5" height="14" />     </g> </svg>'),
        white;
}

#fullscreen-button {
    background:
        url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke="hsl(243, 100%, 70%)">    <g fill="none" stroke-width="2">    <path d="M4 10l0 -6l6 0" />    <path d="M20 10l0 -6l-6 0" />    <path d="M4 14l0 6l6 0" />    <path d="M20 14l0 6l-6 0" />    </g> </svg>'),
        white;
    background-size: cover;
    width: 5em;
    height: 5em;
    border-radius: 8px;
}

#player-overlay-controls-bot {
    display: none; /* Initially hidden until a video is loaded */
    align-items: flex-end;
    justify-content: center; /* Only makes a difference once wrapped */
    column-gap: 0.2em;
    width: 100%; /* Otherwise it can become wider than the parent and the shrinking properties on the children don't work as we want */
}
#player-overlay-controls-bot .seek-button {
    flex-shrink: 1;  /* Shrink on narrow display (e.g. portrait phone) */
    min-width: 0; /* Otherwise won't shrink beyond a certain value */
    font-size: min(5vw, 50px); /* Scale font size with width */
}
#player-overlay-controls-bot-mid {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: min(5vw, 50px); /* Scale font size with width */
}

#lock-controls-slider {
    display: none; /* Initially hidden until a video is loaded */
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: 0px;
    height: 2em;
    width: 2em;
    background-size: cover;
    border-radius: 8px;
}
#lock-controls-slider:hover {
    background-color: hsl(243, 100%, 90%);
}
#lock-controls-slider.glow {
    box-shadow: 0 0 20px #B5179E, 0 0 30px #B5179E, 0 0 40px #B5179E;
}

/* Padlock icon - from ChatGPT, try using https://www.svgviewer.dev/ to edit? */
.icon-locked {
    background:
        content-box url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25" width="50" height="50" stroke="hsl(243, 100%, 70%)">    <g fill="none" stroke-width="2">      <rect x="5" y="11" width="14" height="10" rx="2"/>      <path d="M8 11V7a4 4 0 1 1 8 0v4"/>      <circle cx="12" cy="16" r="1"/>    </g>  </svg>'),
        border-box white;
}

/* Unlocked padlock icon - from ChatGPT, try using https://www.svgviewer.dev/ to edit?  */
.icon-unlocked {
    background:
        content-box url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="2 0 25 25" width="50" height="50" stroke="hsl(243, 100%, 70%)">    <g fill="none" stroke-width="2">      <rect x="5" y="11" width="14" height="10" rx="2"/>      <path d="M16 11V7a4 4 0 1 1 8 0v4"/>      <circle cx="12" cy="16" r="1"/>    </g>  </svg>'),
        border-box white;
}

#current-time-span {
    cursor: pointer;
    background-color: white;
    margin: 0.1em;
}
#current-time-span.seeking {
    background-color: #B5179E;
}
#current-time-span:hover {
    background-color: hsl(243, 100%, 90%);
}

#restore-normal-controls-button {
    display: none; /* Initially hidden until the "use native controls" button is clicked */
}

.seek-button {
    background: white;
    border-radius: 8px;
}
.seek-button:hover {
    background-color: hsl(243, 100%, 90%);
}

.disabled {
    opacity: 50%;
    pointer-events: none;
}